@page "/fetchdata"

<button @onclick="DeselectAllRows">Deselect All</button>
<button @onclick="ShowSelectedItems">Show Selected Items</button>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Select</th>
            <th>Date</th>
            <th>Time</th>
            <th>Vagon Number</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in items)
        {
            <tr class="@GetRowClass(item.ID)">
                <td>
                    <input type="checkbox" @bind="selectedItems[item.ID]" />
                </td>
                <td>@item.DT.ToShortDateString()</td>
                <td>@item.VR.ToString(@"hh\:mm\:ss")</td>
                <td>@item.NVAG</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<ItemModel> items;
    private Dictionary<int, bool> selectedItems = new Dictionary<int, bool>();

    protected override void OnInitialized()
    {
        // Sample data initialization
        items = new List<ItemModel>
        {
            new ItemModel { ID = 1, DT = DateTime.Now, VR = new TimeSpan(10, 15, 20), NVAG = "12345" },
            new ItemModel { ID = 2, DT = DateTime.Now, VR = new TimeSpan(11, 25, 30), NVAG = "67890" },
            new ItemModel { ID = 3, DT = DateTime.Now, VR = new TimeSpan(12, 35, 40), NVAG = "54321" }
        };

        // Initialize the dictionary with item IDs
        foreach (var item in items)
        {
            selectedItems[item.ID] = false; // Initially set all as unselected
        }
    }

    private void DeselectAllRows()
    {
        // Set all items in the dictionary to false (deselected)
        foreach (var key in selectedItems.Keys.ToList())
        {
            selectedItems[key] = false;
        }

        // Trigger re-render
        StateHasChanged();
    }

    private string GetRowClass(int id)
    {
        // Use TryGetValue to safely access the dictionary
        return selectedItems.TryGetValue(id, out bool isSelected) && isSelected ? "table-active" : string.Empty;
    }

    // Показываю все состояния 
    private void ShowSelectedItems()
    {
        foreach (KeyValuePair<int, bool> pair in selectedItems)
        {
            int key = pair.Key;
            bool value = pair.Value;
            Console.WriteLine($"Selected id: {key.ToString()}, state: {value.ToString()}");
        }
    }

    public class ItemModel
    {
        public int ID { get; set; }
        public DateTime DT { get; set; }
        public TimeSpan VR { get; set; }
        public string NVAG { get; set; }
    }
}
